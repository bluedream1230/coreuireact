{
    "componentChunkName": "component---src-docs-templates-docs-tsx",
    "path": "/4.0/components/modal/",
    "result": {"data":{"site":{"siteMetadata":{"title":"CoreUI for React.js"}},"mdx":{"id":"51e14d73-3d45-513d-87d9-15756be77c88","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Modal Component\",\n  \"name\": \"Modal\",\n  \"description\": \"React Modal component offers a lightweight, multi-purpose popup to add dialogs to yours. Learn how to customize React CoreUI Modals easily. Multiple examples and tutorial.\",\n  \"menu\": \"Components\",\n  \"route\": \"/components/modal\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"h3\", {\n    \"id\": \"modal-components\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#modal-components\",\n    \"aria-label\": \"modal components permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Modal components\"), mdx(\"p\", null, \"Below is a static modal example (meaning its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"position\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"display\"), \" have been overridden). Included are the modal header, modal body (required for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"padding\"), \"), and modal footer (optional). We ask that you include modal headers with dismiss actions whenever possible, or provide another explicit dismiss action.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(CModal, {\n    className: \"show d-block position-static\",\n    backdrop: false,\n    keyboard: false,\n    portal: false,\n    visible: true,\n    mdxType: \"CModal\"\n  }, mdx(CModalHeader, {\n    mdxType: \"CModalHeader\"\n  }, mdx(CModalTitle, {\n    mdxType: \"CModalTitle\"\n  }, \"Modal title\")), mdx(CModalBody, {\n    mdxType: \"CModalBody\"\n  }, \"Modal body text goes here.\"), mdx(CModalFooter, {\n    mdxType: \"CModalFooter\"\n  }, mdx(CButton, {\n    color: \"secondary\",\n    mdxType: \"CButton\"\n  }, \"Close\"), mdx(CButton, {\n    color: \"primary\",\n    mdxType: \"CButton\"\n  }, \"Save changes\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  <CModal className=\\\"show d-block position-static\\\" backdrop={false} keyboard={false} portal={false} visible>\\n    <CModalHeader>\\n      <CModalTitle>Modal title</CModalTitle>\\n    </CModalHeader>\\n    <CModalBody>Modal body text goes here.</CModalBody>\\n    <CModalFooter>\\n      <CButton color=\\\"secondary\\\">Close</CButton>\\n      <CButton color=\\\"primary\\\">Save changes</CButton>\\n    </CModalFooter>\\n  </CModal>\\n\")), mdx(\"h3\", {\n    \"id\": \"live-demo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#live-demo\",\n    \"aria-label\": \"live demo permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Live demo\"), mdx(\"p\", null, \"Toggle a working modal demo by clicking the button below. It will slide down and fade in from the top of the page.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Launch demo modal\"), mdx(CModal, {\n      visible: visible,\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Modal title\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"Woohoo, you're reading this text in a modal!\"), mdx(CModalFooter, {\n      mdxType: \"CModalFooter\"\n    }, mdx(CButton, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setVisible(false);\n      },\n      mdxType: \"CButton\"\n    }, \"Close\"), mdx(CButton, {\n      color: \"primary\",\n      mdxType: \"CButton\"\n    }, \"Save changes\"))));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\\n        <CModal visible={visible} onDismiss={() => setVisible(false)}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Modal title</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>Woohoo, you're reading this text in a modal!</CModalBody>\\n          <CModalFooter>\\n            <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n              Close\\n            </CButton>\\n            <CButton color=\\\"primary\\\">Save changes</CButton>\\n          </CModalFooter>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"h3\", {\n    \"id\": \"static-backdrop\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#static-backdrop\",\n    \"aria-label\": \"static backdrop permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Static backdrop\"), mdx(\"p\", null, \"If you don\\u2019t provide an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onDimsiss\"), \" handler to the Modal component, your modal will behave as though the backdrop is static, meaning it will not close when clicking outside it. Click the button below to try it.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        visible = _useState4[0],\n        setVisible = _useState4[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Launch static backdrop modal\"), mdx(CModal, {\n      visible: visible,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Modal title\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"I will not close if you click outside me. Don't even try to press escape key.\"), mdx(CModalFooter, {\n      mdxType: \"CModalFooter\"\n    }, mdx(CButton, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setVisible(false);\n      },\n      mdxType: \"CButton\"\n    }, \"Close\"), mdx(CButton, {\n      color: \"primary\",\n      mdxType: \"CButton\"\n    }, \"Save changes\"))));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Launch static backdrop modal</CButton>\\n        <CModal visible={visible}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Modal title</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            I will not close if you click outside me. Don't even try to press escape key.\\n          </CModalBody>\\n          <CModalFooter>\\n            <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n              Close\\n            </CButton>\\n            <CButton color=\\\"primary\\\">Save changes</CButton>\\n          </CModalFooter>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"h3\", {\n    \"id\": \"scrolling-long-content\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#scrolling-long-content\",\n    \"aria-label\": \"scrolling long content permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Scrolling long content\"), mdx(\"p\", null, \"When modals become too long for the user's viewport or device, they scroll independent of the page itself. Try the demo below to see what we mean.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        visible = _useState6[0],\n        setVisible = _useState6[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Launch demo modal\"), mdx(CModal, {\n      visible: visible,\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Modal title\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\")), mdx(CModalFooter, {\n      mdxType: \"CModalFooter\"\n    }, mdx(CButton, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setVisible(false);\n      },\n      mdxType: \"CButton\"\n    }, \"Close\"), mdx(CButton, {\n      color: \"primary\",\n      mdxType: \"CButton\"\n    }, \"Save changes\"))));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\\n        <CModal visible={visible} onDismiss={() => setVisible(false)}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Modal title</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n          </CModalBody>\\n          <CModalFooter>\\n            <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n              Close\\n            </CButton>\\n            <CButton color=\\\"primary\\\">Save changes</CButton>\\n          </CModalFooter>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"p\", null, \"You can also create a scrollable modal that allows scroll the modal body by adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scrollable\"), \" prop.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        visible = _useState8[0],\n        setVisible = _useState8[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Launch demo modal\"), mdx(CModal, {\n      scrollable: true,\n      visible: visible,\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Modal title\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\")), mdx(CModalFooter, {\n      mdxType: \"CModalFooter\"\n    }, mdx(CButton, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setVisible(false);\n      },\n      mdxType: \"CButton\"\n    }, \"Close\"), mdx(CButton, {\n      color: \"primary\",\n      mdxType: \"CButton\"\n    }, \"Save changes\"))));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\\n        <CModal scrollable visible={visible} onDismiss={() => setVisible(false)}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Modal title</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n            <p>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </p>\\n            <p>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </p>\\n            <p>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </p>\\n          </CModalBody>\\n          <CModalFooter>\\n            <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n              Close\\n            </CButton>\\n            <CButton color=\\\"primary\\\">Save changes</CButton>\\n          </CModalFooter>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"h3\", {\n    \"id\": \"vertically-centered\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#vertically-centered\",\n    \"aria-label\": \"vertically centered permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Vertically centered\"), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"alignment=\\\"center\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CModal>\"), \" to vertically center the modal.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        visible = _useState10[0],\n        setVisible = _useState10[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Vertically centered modal\"), mdx(CModal, {\n      alignment: \"center\",\n      visible: visible,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Modal title\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(CModalFooter, {\n      mdxType: \"CModalFooter\"\n    }, mdx(CButton, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setVisible(false);\n      },\n      mdxType: \"CButton\"\n    }, \"Close\"), mdx(CButton, {\n      color: \"primary\",\n      mdxType: \"CButton\"\n    }, \"Save changes\"))));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Vertically centered modal</CButton>\\n        <CModal alignment=\\\"center\\\" visible={visible}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Modal title</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\n          </CModalBody>\\n          <CModalFooter>\\n            <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n              Close\\n            </CButton>\\n            <CButton color=\\\"primary\\\">Save changes</CButton>\\n          </CModalFooter>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        visible = _useState12[0],\n        setVisible = _useState12[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Vertically centered scrollable modal\"), mdx(CModal, {\n      alignment: \"center\",\n      scrollable: true,\n      visible: visible,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Modal title\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), mdx(\"p\", null, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\"), mdx(\"p\", null, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), mdx(\"p\", null, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\")), mdx(CModalFooter, {\n      mdxType: \"CModalFooter\"\n    }, mdx(CButton, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setVisible(false);\n      },\n      mdxType: \"CButton\"\n    }, \"Close\"), mdx(CButton, {\n      color: \"primary\",\n      mdxType: \"CButton\"\n    }, \"Save changes\"))));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Vertically centered scrollable modal</CButton>\\n        <CModal alignment=\\\"center\\\" scrollable visible={visible}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Modal title</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n          </CModalBody>\\n          <CModalFooter>\\n            <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n              Close\\n            </CButton>\\n            <CButton color=\\\"primary\\\">Save changes</CButton>\\n          </CModalFooter>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"h3\", {\n    \"id\": \"tooltips-and-popovers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#tooltips-and-popovers\",\n    \"aria-label\": \"tooltips and popovers permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Tooltips and popovers\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CTooltips>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CPopovers>\"), \" can be placed within modals as needed. When modals are closed, any tooltips and popovers within are also automatically dismissed.\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        visible = _useState14[0],\n        setVisible = _useState14[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Launch demo modal\"), mdx(CModal, {\n      alignment: \"center\",\n      visible: visible,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Modal title\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, mdx(\"h5\", null, \"Popover in a modal\"), mdx(\"p\", null, \"This\", mdx(CPopover, {\n      title: \"Popover title\",\n      content: \"Popover body content is set in this property.\",\n      mdxType: \"CPopover\"\n    }, mdx(CButton, {\n      mdxType: \"CButton\"\n    }, \"button\")), \" triggers a popover on click.\"), mdx(\"hr\", null), mdx(\"h5\", null, \"Tooltips in a modal\"), mdx(\"p\", null, mdx(CTooltip, {\n      content: \"Tooltip\",\n      mdxType: \"CTooltip\"\n    }, mdx(CLink, {\n      mdxType: \"CLink\"\n    }, \"This link\")), \" and\", mdx(CTooltip, {\n      content: \"Tooltip\",\n      mdxType: \"CTooltip\"\n    }, mdx(CLink, {\n      mdxType: \"CLink\"\n    }, \"that link\")), \" have tooltips on hover.\")), mdx(CModalFooter, {\n      mdxType: \"CModalFooter\"\n    }, mdx(CButton, {\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setVisible(false);\n      },\n      mdxType: \"CButton\"\n    }, \"Close\"), mdx(CButton, {\n      color: \"primary\",\n      mdxType: \"CButton\"\n    }, \"Save changes\"))));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\\n        <CModal alignment=\\\"center\\\" visible={visible}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Modal title</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            <h5>Popover in a modal</h5>\\n            <p>This \\n            <CPopover\\n              title=\\\"Popover title\\\"\\n              content=\\\"Popover body content is set in this property.\\\"\\n              ><CButton>button</CButton></CPopover> triggers a popover on click.\\n            </p>\\n            <hr/>\\n            <h5>Tooltips in a modal</h5>\\n            <p>\\n              <CTooltip\\n              content=\\\"Tooltip\\\"\\n              ><CLink>This link</CLink></CTooltip> and \\n              <CTooltip\\n              content=\\\"Tooltip\\\"\\n              ><CLink>that link</CLink></CTooltip> have tooltips on hover.\\n            </p>\\n          </CModalBody>\\n          <CModalFooter>\\n            <CButton color=\\\"secondary\\\" onClick={() => setVisible(false)}>\\n              Close\\n            </CButton>\\n            <CButton color=\\\"primary\\\">Save changes</CButton>\\n          </CModalFooter>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"h2\", {\n    \"id\": \"optional-sizes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#optional-sizes\",\n    \"aria-label\": \"optional sizes permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Optional sizes\"), mdx(\"p\", null, \"Modals have three optional sizes, available via modifier classes to be placed on a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CModal>\"), \". These sizes kick in at certain breakpoints to avoid horizontal scrollbars on narrower viewports.\"), mdx(\"table\", {\n    className: \"table\"\n  }, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Size\"), mdx(\"th\", null, \"Property size\"), mdx(\"th\", null, \"Modal max-width\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, \"Small\"), mdx(\"td\", null, mdx(\"code\", null, \"'sm'\")), mdx(\"td\", null, mdx(\"code\", null, \"300px\"))), mdx(\"tr\", null, mdx(\"td\", null, \"Default\"), mdx(\"td\", {\n    className: \"text-muted\"\n  }, \"None\"), mdx(\"td\", null, mdx(\"code\", null, \"500px\"))), mdx(\"tr\", null, mdx(\"td\", null, \"Large\"), mdx(\"td\", null, mdx(\"code\", null, \"'lg'\")), mdx(\"td\", null, mdx(\"code\", null, \"800px\"))), mdx(\"tr\", null, mdx(\"td\", null, \"Extra large\"), mdx(\"td\", null, mdx(\"code\", null, \"'xl'\")), mdx(\"td\", null, mdx(\"code\", null, \"1140px\"))))), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        visibleXL = _useState16[0],\n        setVisibleXL = _useState16[1];\n\n    var _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        visibleLg = _useState18[0],\n        setVisibleLg = _useState18[1];\n\n    var _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        visibleSm = _useState20[0],\n        setVisibleSm = _useState20[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleXL(!visibleXL);\n      },\n      mdxType: \"CButton\"\n    }, \"Extra large modal\"), mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleLg(!visibleLg);\n      },\n      mdxType: \"CButton\"\n    }, \"Large modal\"), mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleSm(!visibleSm);\n      },\n      mdxType: \"CButton\"\n    }, \"Small modal\"), mdx(CModal, {\n      size: \"xl\",\n      visible: visibleXL,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleXL(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Extra large modal\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")), mdx(CModal, {\n      size: \"lg\",\n      visible: visibleLg,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleLg(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Large modal\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")), mdx(CModal, {\n      size: \"sm\",\n      visible: visibleSm,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleSm(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Small modal\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visibleXL, setVisibleXL] = useState(false)\\n    const [visibleLg, setVisibleLg] = useState(false)\\n    const [visibleSm, setVisibleSm] = useState(false)\\n    return (\\n      <>\\n        <CButton onClick={() => setVisibleXL(!visibleXL)}>Extra large modal</CButton>\\n        <CButton onClick={() => setVisibleLg(!visibleLg)}>Large modal</CButton>\\n        <CButton onClick={() => setVisibleSm(!visibleSm)}>Small modal</CButton>\\n        <CModal size=\\\"xl\\\" visible={visibleXL}>\\n          <CModalHeader onDismiss={() => setVisibleXL(false)}>\\n            <CModalTitle>Extra large modal</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n        <CModal size=\\\"lg\\\" visible={visibleLg}>\\n          <CModalHeader onDismiss={() => setVisibleLg(false)}>\\n            <CModalTitle>Large modal</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n        <CModal size=\\\"sm\\\" visible={visibleSm}>\\n          <CModalHeader onDismiss={() => setVisibleSm(false)}>\\n            <CModalTitle>Small modal</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"h2\", {\n    \"id\": \"fullscreen-modal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#fullscreen-modal\",\n    \"aria-label\": \"fullscreen modal permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Fullscreen Modal\"), mdx(\"p\", null, \"Another override is the option to pop up a modal that covers the user viewport, available via property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fullscrean\"), \".\"), mdx(\"table\", {\n    className: \"table\"\n  }, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Property fullscrean\"), mdx(\"th\", null, \"Availability\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"true\")), mdx(\"td\", null, \"Always\")), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"'sm'\")), mdx(\"td\", null, \"Below \", mdx(\"code\", null, \"576px\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"'md'\")), mdx(\"td\", null, \"Below \", mdx(\"code\", null, \"768px\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"'lg'\")), mdx(\"td\", null, \"Below \", mdx(\"code\", null, \"992px\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"'xl'\")), mdx(\"td\", null, \"Below \", mdx(\"code\", null, \"1200px\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"'xxl'\")), mdx(\"td\", null, \"Below \", mdx(\"code\", null, \"1400px\"))))), mdx(Example, {\n    mdxType: \"Example\"\n  }, function () {\n    var _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        visible = _useState22[0],\n        setVisible = _useState22[1];\n\n    var _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        visibleSm = _useState24[0],\n        setVisibleSm = _useState24[1];\n\n    var _useState25 = useState(false),\n        _useState26 = _slicedToArray(_useState25, 2),\n        visibleMd = _useState26[0],\n        setVisibMdSm = _useState26[1];\n\n    var _useState27 = useState(false),\n        _useState28 = _slicedToArray(_useState27, 2),\n        visibleLg = _useState28[0],\n        setVisibleLg = _useState28[1];\n\n    var _useState29 = useState(false),\n        _useState30 = _slicedToArray(_useState29, 2),\n        visibleXL = _useState30[0],\n        setVisibleXL = _useState30[1];\n\n    var _useState31 = useState(false),\n        _useState32 = _slicedToArray(_useState31, 2),\n        visibleXXL = _useState32[0],\n        setVisibleXXL = _useState32[1];\n\n    return mdx(React.Fragment, null, mdx(CButton, {\n      onClick: function onClick() {\n        return setVisible(!visible);\n      },\n      mdxType: \"CButton\"\n    }, \"Full screen\"), mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleSm(!visibleSm);\n      },\n      mdxType: \"CButton\"\n    }, \"Full screen below sm\"), mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleMd(!visibleMd);\n      },\n      mdxType: \"CButton\"\n    }, \"Full screen below md\"), mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleLg(!visibleLg);\n      },\n      mdxType: \"CButton\"\n    }, \"Full screen below lg\"), mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleXL(!visibleXL);\n      },\n      mdxType: \"CButton\"\n    }, \"Full screen below xl\"), mdx(CButton, {\n      onClick: function onClick() {\n        return setVisibleXXL(!visibleXXL);\n      },\n      mdxType: \"CButton\"\n    }, \"Full screen below xxl\"), mdx(CModal, {\n      fullscreen: true,\n      visible: visible,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Full screen\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")), mdx(CModal, {\n      fullscreen: \"sm\",\n      visible: visibleSm,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleSm(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Full screen below sm\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")), mdx(CModal, {\n      fullscreen: \"md\",\n      visible: visibleMd,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleMd(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Full screen below md\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")), mdx(CModal, {\n      fullscreen: \"lg\",\n      visible: visibleLg,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleLg(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Full screen below lg\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")), mdx(CModal, {\n      fullscreen: \"xl\",\n      visible: visibleXL,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleXL(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Full screen below xl\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")), mdx(CModal, {\n      fullscreen: \"xxl\",\n      visible: visibleXXL,\n      mdxType: \"CModal\"\n    }, mdx(CModalHeader, {\n      onDismiss: function onDismiss() {\n        return setVisibleXXL(false);\n      },\n      mdxType: \"CModalHeader\"\n    }, mdx(CModalTitle, {\n      mdxType: \"CModalTitle\"\n    }, \"Full screen below xxl\")), mdx(CModalBody, {\n      mdxType: \"CModalBody\"\n    }, \"...\")));\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"  {() => {\\n    const [visible, setVisible] = useState(false)\\n    const [visibleSm, setVisibleSm] = useState(false)\\n    const [visibleMd, setVisibMdSm] = useState(false)\\n    const [visibleLg, setVisibleLg] = useState(false)\\n    const [visibleXL, setVisibleXL] = useState(false)\\n    const [visibleXXL, setVisibleXXL] = useState(false)\\n    \\n    return (\\n      <>\\n        <CButton onClick={() => setVisible(!visible)}>Full screen</CButton>\\n        <CButton onClick={() => setVisibleSm(!visibleSm)}>Full screen below sm</CButton>\\n        <CButton onClick={() => setVisibleMd(!visibleMd)}>Full screen below md</CButton>\\n        <CButton onClick={() => setVisibleLg(!visibleLg)}>Full screen below lg</CButton>\\n        <CButton onClick={() => setVisibleXL(!visibleXL)}>Full screen below xl</CButton>\\n        <CButton onClick={() => setVisibleXXL(!visibleXXL)}>Full screen below xxl</CButton>\\n        <CModal fullscreen visible={visible}>\\n          <CModalHeader onDismiss={() => setVisible(false)}>\\n            <CModalTitle>Full screen</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n        <CModal fullscreen=\\\"sm\\\" visible={visibleSm}>\\n          <CModalHeader onDismiss={() => setVisibleSm(false)}>\\n            <CModalTitle>Full screen below sm</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n        <CModal fullscreen=\\\"md\\\" visible={visibleMd}>\\n          <CModalHeader onDismiss={() => setVisibleMd(false)}>\\n            <CModalTitle>Full screen below md</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n        <CModal fullscreen=\\\"lg\\\" visible={visibleLg}>\\n          <CModalHeader onDismiss={() => setVisibleLg(false)}>\\n            <CModalTitle>Full screen below lg</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n        <CModal fullscreen=\\\"xl\\\" visible={visibleXL}>\\n          <CModalHeader onDismiss={() => setVisibleXL(false)}>\\n            <CModalTitle>Full screen below xl</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n        <CModal fullscreen=\\\"xxl\\\" visible={visibleXXL}>\\n          <CModalHeader onDismiss={() => setVisibleXXL(false)}>\\n            <CModalTitle>Full screen below xxl</CModalTitle>\\n          </CModalHeader>\\n          <CModalBody>\\n            ...\\n          </CModalBody>\\n        </CModal>\\n      </>\\n    )\\n  }}\\n\")), mdx(\"h2\", {\n    \"id\": \"api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#api\",\n    \"aria-label\": \"api permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"API\"), mdx(\"h3\", {\n    \"id\": \"cmodal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cmodal\",\n    \"aria-label\": \"cmodal permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CModal\"), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Prop name\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"alignment\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Align the modal in the center or top of the screen. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"\\\"top\\\"\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"backdrop\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Apply a backdrop on body while modal is open. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"duration\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"@ignore\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"number\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"fullscreen\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set modal to covers the entire user viewport. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"keyboard\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Closes the modal when escape key is pressed. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"onDismiss\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Method called before the dissmiss animation has started. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"() => void\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"portal\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Generates modal using createPortal. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"scrollable\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Create a scrollable modal that allows scrolling the modal body. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"size\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Size the component small, large, or extra large. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"\\\"sm\\\"\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"transition\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Remove animation to create modal that simply appear rather than fade in to view. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"visible\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Toggle the visibility of modal component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\"))))), mdx(\"h3\", {\n    \"id\": \"cmodalbody\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cmodalbody\",\n    \"aria-label\": \"cmodalbody permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CModalBody\"), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Prop name\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\"))))), mdx(\"h3\", {\n    \"id\": \"cmodalcontent\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cmodalcontent\",\n    \"aria-label\": \"cmodalcontent permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CModalContent\"), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Prop name\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\"))))), mdx(\"h3\", {\n    \"id\": \"cmodaldialog\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cmodaldialog\",\n    \"aria-label\": \"cmodaldialog permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CModalDialog\"), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Prop name\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"alignment\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Align the modal in the center or top of the screen. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"\\\"top\\\"\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"fullscreen\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Set modal to covers the entire user viewport. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"scrollable\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Does the modal dialog itself scroll, or does the whole dialog scroll within the window. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"boolean\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"size\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Size the component small, large, or extra large. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"\\\"sm\\\"\"))))), mdx(\"h3\", {\n    \"id\": \"cmodalfooter\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cmodalfooter\",\n    \"aria-label\": \"cmodalfooter permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CModalFooter\"), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Prop name\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\"))))), mdx(\"h3\", {\n    \"id\": \"cmodalheader\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cmodalheader\",\n    \"aria-label\": \"cmodalheader permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CModalHeader\"), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Prop name\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"onDismiss\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Add a close button component to the header which will call the provided handler when clicked. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"() => void\"))))), mdx(\"h3\", {\n    \"id\": \"cmodaltitle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cmodaltitle\",\n    \"aria-label\": \"cmodaltitle permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CModalTitle\"), mdx(\"div\", {\n    \"className\": \"markdown\"\n  }, mdx(\"table\", {\n    parentName: \"div\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Prop name\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Description\"), mdx(\"th\", {\n    parentName: \"tr\"\n  }, \"Type\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"A string of all className you want applied to the base component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"component\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"Component used for the root node. Either a string to use a HTML element or a component. [docs]\"), mdx(\"td\", {\n    parentName: \"tr\"\n  }, \"string\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"React Modal Component","description":"React Modal component offers a lightweight, multi-purpose popup to add dialogs to yours. Learn how to customize React CoreUI Modals easily. Multiple examples and tutorial."},"tableOfContents":{"items":[{"url":"#examples","title":"Examples","items":[{"url":"#modal-components","title":"Modal components"},{"url":"#live-demo","title":"Live demo"},{"url":"#static-backdrop","title":"Static backdrop"},{"url":"#scrolling-long-content","title":"Scrolling long content"},{"url":"#vertically-centered","title":"Vertically centered"},{"url":"#tooltips-and-popovers","title":"Tooltips and popovers"}]},{"url":"#optional-sizes","title":"Optional sizes"},{"url":"#fullscreen-modal","title":"Fullscreen Modal"},{"url":"#api","title":"API","items":[{"url":"#cmodal","title":"CModal"},{"url":"#cmodalbody","title":"CModalBody"},{"url":"#cmodalcontent","title":"CModalContent"},{"url":"#cmodaldialog","title":"CModalDialog"},{"url":"#cmodalfooter","title":"CModalFooter"},{"url":"#cmodalheader","title":"CModalHeader"},{"url":"#cmodaltitle","title":"CModalTitle"}]}]}}},"pageContext":{"id":"51e14d73-3d45-513d-87d9-15756be77c88"}},
    "staticQueryHashes": ["4202924991"]}